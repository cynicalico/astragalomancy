#pragma once

#include <SDL3/SDL_keycode.h>
#include <fmt/format.h>

namespace sdl3 {
inline const char *keycode_to_string(const SDL_Keycode keycode) {
    switch (keycode) {
    case SDLK_UNKNOWN:
        return "UNKNOWN";
    case SDLK_RETURN:
        return "RETURN";
    case SDLK_ESCAPE:
        return "ESCAPE";
    case SDLK_BACKSPACE:
        return "BACKSPACE";
    case SDLK_TAB:
        return "TAB";
    case SDLK_SPACE:
        return "SPACE";
    case SDLK_EXCLAIM:
        return "EXCLAIM";
    case SDLK_DBLAPOSTROPHE:
        return "DBLAPOSTROPHE";
    case SDLK_HASH:
        return "HASH";
    case SDLK_DOLLAR:
        return "DOLLAR";
    case SDLK_PERCENT:
        return "PERCENT";
    case SDLK_AMPERSAND:
        return "AMPERSAND";
    case SDLK_APOSTROPHE:
        return "APOSTROPHE";
    case SDLK_LEFTPAREN:
        return "LEFTPAREN";
    case SDLK_RIGHTPAREN:
        return "RIGHTPAREN";
    case SDLK_ASTERISK:
        return "ASTERISK";
    case SDLK_PLUS:
        return "PLUS";
    case SDLK_COMMA:
        return "COMMA";
    case SDLK_MINUS:
        return "MINUS";
    case SDLK_PERIOD:
        return "PERIOD";
    case SDLK_SLASH:
        return "SLASH";
    case SDLK_0:
        return "0";
    case SDLK_1:
        return "1";
    case SDLK_2:
        return "2";
    case SDLK_3:
        return "3";
    case SDLK_4:
        return "4";
    case SDLK_5:
        return "5";
    case SDLK_6:
        return "6";
    case SDLK_7:
        return "7";
    case SDLK_8:
        return "8";
    case SDLK_9:
        return "9";
    case SDLK_COLON:
        return "COLON";
    case SDLK_SEMICOLON:
        return "SEMICOLON";
    case SDLK_LESS:
        return "LESS";
    case SDLK_EQUALS:
        return "EQUALS";
    case SDLK_GREATER:
        return "GREATER";
    case SDLK_QUESTION:
        return "QUESTION";
    case SDLK_AT:
        return "AT";
    case SDLK_LEFTBRACKET:
        return "LEFTBRACKET";
    case SDLK_BACKSLASH:
        return "BACKSLASH";
    case SDLK_RIGHTBRACKET:
        return "RIGHTBRACKET";
    case SDLK_CARET:
        return "CARET";
    case SDLK_UNDERSCORE:
        return "UNDERSCORE";
    case SDLK_GRAVE:
        return "GRAVE";
    case SDLK_A:
        return "A";
    case SDLK_B:
        return "B";
    case SDLK_C:
        return "C";
    case SDLK_D:
        return "D";
    case SDLK_E:
        return "E";
    case SDLK_F:
        return "F";
    case SDLK_G:
        return "G";
    case SDLK_H:
        return "H";
    case SDLK_I:
        return "I";
    case SDLK_J:
        return "J";
    case SDLK_K:
        return "K";
    case SDLK_L:
        return "L";
    case SDLK_M:
        return "M";
    case SDLK_N:
        return "N";
    case SDLK_O:
        return "O";
    case SDLK_P:
        return "P";
    case SDLK_Q:
        return "Q";
    case SDLK_R:
        return "R";
    case SDLK_S:
        return "S";
    case SDLK_T:
        return "T";
    case SDLK_U:
        return "U";
    case SDLK_V:
        return "V";
    case SDLK_W:
        return "W";
    case SDLK_X:
        return "X";
    case SDLK_Y:
        return "Y";
    case SDLK_Z:
        return "Z";
    case SDLK_LEFTBRACE:
        return "LEFTBRACE";
    case SDLK_PIPE:
        return "PIPE";
    case SDLK_RIGHTBRACE:
        return "RIGHTBRACE";
    case SDLK_TILDE:
        return "TILDE";
    case SDLK_DELETE:
        return "DELETE";
    case SDLK_PLUSMINUS:
        return "PLUSMINUS";
    case SDLK_CAPSLOCK:
        return "CAPSLOCK";
    case SDLK_F1:
        return "F1";
    case SDLK_F2:
        return "F2";
    case SDLK_F3:
        return "F3";
    case SDLK_F4:
        return "F4";
    case SDLK_F5:
        return "F5";
    case SDLK_F6:
        return "F6";
    case SDLK_F7:
        return "F7";
    case SDLK_F8:
        return "F8";
    case SDLK_F9:
        return "F9";
    case SDLK_F10:
        return "F10";
    case SDLK_F11:
        return "F11";
    case SDLK_F12:
        return "F12";
    case SDLK_PRINTSCREEN:
        return "PRINTSCREEN";
    case SDLK_SCROLLLOCK:
        return "SCROLLLOCK";
    case SDLK_PAUSE:
        return "PAUSE";
    case SDLK_INSERT:
        return "INSERT";
    case SDLK_HOME:
        return "HOME";
    case SDLK_PAGEUP:
        return "PAGEUP";
    case SDLK_END:
        return "END";
    case SDLK_PAGEDOWN:
        return "PAGEDOWN";
    case SDLK_RIGHT:
        return "RIGHT";
    case SDLK_LEFT:
        return "LEFT";
    case SDLK_DOWN:
        return "DOWN";
    case SDLK_UP:
        return "UP";
    case SDLK_NUMLOCKCLEAR:
        return "NUMLOCKCLEAR";
    case SDLK_KP_DIVIDE:
        return "KP_DIVIDE";
    case SDLK_KP_MULTIPLY:
        return "KP_MULTIPLY";
    case SDLK_KP_MINUS:
        return "KP_MINUS";
    case SDLK_KP_PLUS:
        return "KP_PLUS";
    case SDLK_KP_ENTER:
        return "KP_ENTER";
    case SDLK_KP_1:
        return "KP_1";
    case SDLK_KP_2:
        return "KP_2";
    case SDLK_KP_3:
        return "KP_3";
    case SDLK_KP_4:
        return "KP_4";
    case SDLK_KP_5:
        return "KP_5";
    case SDLK_KP_6:
        return "KP_6";
    case SDLK_KP_7:
        return "KP_7";
    case SDLK_KP_8:
        return "KP_8";
    case SDLK_KP_9:
        return "KP_9";
    case SDLK_KP_0:
        return "KP_0";
    case SDLK_KP_PERIOD:
        return "KP_PERIOD";
    case SDLK_APPLICATION:
        return "APPLICATION";
    case SDLK_POWER:
        return "POWER";
    case SDLK_KP_EQUALS:
        return "KP_EQUALS";
    case SDLK_F13:
        return "F13";
    case SDLK_F14:
        return "F14";
    case SDLK_F15:
        return "F15";
    case SDLK_F16:
        return "F16";
    case SDLK_F17:
        return "F17";
    case SDLK_F18:
        return "F18";
    case SDLK_F19:
        return "F19";
    case SDLK_F20:
        return "F20";
    case SDLK_F21:
        return "F21";
    case SDLK_F22:
        return "F22";
    case SDLK_F23:
        return "F23";
    case SDLK_F24:
        return "F24";
    case SDLK_EXECUTE:
        return "EXECUTE";
    case SDLK_HELP:
        return "HELP";
    case SDLK_MENU:
        return "MENU";
    case SDLK_SELECT:
        return "SELECT";
    case SDLK_STOP:
        return "STOP";
    case SDLK_AGAIN:
        return "AGAIN";
    case SDLK_UNDO:
        return "UNDO";
    case SDLK_CUT:
        return "CUT";
    case SDLK_COPY:
        return "COPY";
    case SDLK_PASTE:
        return "PASTE";
    case SDLK_FIND:
        return "FIND";
    case SDLK_MUTE:
        return "MUTE";
    case SDLK_VOLUMEUP:
        return "VOLUMEUP";
    case SDLK_VOLUMEDOWN:
        return "VOLUMEDOWN";
    case SDLK_KP_COMMA:
        return "KP_COMMA";
    case SDLK_KP_EQUALSAS400:
        return "KP_EQUALSAS400";
    case SDLK_ALTERASE:
        return "ALTERASE";
    case SDLK_SYSREQ:
        return "SYSREQ";
    case SDLK_CANCEL:
        return "CANCEL";
    case SDLK_CLEAR:
        return "CLEAR";
    case SDLK_PRIOR:
        return "PRIOR";
    case SDLK_RETURN2:
        return "RETURN2";
    case SDLK_SEPARATOR:
        return "SEPARATOR";
    case SDLK_OUT:
        return "OUT";
    case SDLK_OPER:
        return "OPER";
    case SDLK_CLEARAGAIN:
        return "CLEARAGAIN";
    case SDLK_CRSEL:
        return "CRSEL";
    case SDLK_EXSEL:
        return "EXSEL";
    case SDLK_KP_00:
        return "KP_00";
    case SDLK_KP_000:
        return "KP_000";
    case SDLK_THOUSANDSSEPARATOR:
        return "THOUSANDSSEPARATOR";
    case SDLK_DECIMALSEPARATOR:
        return "DECIMALSEPARATOR";
    case SDLK_CURRENCYUNIT:
        return "CURRENCYUNIT";
    case SDLK_CURRENCYSUBUNIT:
        return "CURRENCYSUBUNIT";
    case SDLK_KP_LEFTPAREN:
        return "KP_LEFTPAREN";
    case SDLK_KP_RIGHTPAREN:
        return "KP_RIGHTPAREN";
    case SDLK_KP_LEFTBRACE:
        return "KP_LEFTBRACE";
    case SDLK_KP_RIGHTBRACE:
        return "KP_RIGHTBRACE";
    case SDLK_KP_TAB:
        return "KP_TAB";
    case SDLK_KP_BACKSPACE:
        return "KP_BACKSPACE";
    case SDLK_KP_A:
        return "KP_A";
    case SDLK_KP_B:
        return "KP_B";
    case SDLK_KP_C:
        return "KP_C";
    case SDLK_KP_D:
        return "KP_D";
    case SDLK_KP_E:
        return "KP_E";
    case SDLK_KP_F:
        return "KP_F";
    case SDLK_KP_XOR:
        return "KP_XOR";
    case SDLK_KP_POWER:
        return "KP_POWER";
    case SDLK_KP_PERCENT:
        return "KP_PERCENT";
    case SDLK_KP_LESS:
        return "KP_LESS";
    case SDLK_KP_GREATER:
        return "KP_GREATER";
    case SDLK_KP_AMPERSAND:
        return "KP_AMPERSAND";
    case SDLK_KP_DBLAMPERSAND:
        return "KP_DBLAMPERSAND";
    case SDLK_KP_VERTICALBAR:
        return "KP_VERTICALBAR";
    case SDLK_KP_DBLVERTICALBAR:
        return "KP_DBLVERTICALBAR";
    case SDLK_KP_COLON:
        return "KP_COLON";
    case SDLK_KP_HASH:
        return "KP_HASH";
    case SDLK_KP_SPACE:
        return "KP_SPACE";
    case SDLK_KP_AT:
        return "KP_AT";
    case SDLK_KP_EXCLAM:
        return "KP_EXCLAM";
    case SDLK_KP_MEMSTORE:
        return "KP_MEMSTORE";
    case SDLK_KP_MEMRECALL:
        return "KP_MEMRECALL";
    case SDLK_KP_MEMCLEAR:
        return "KP_MEMCLEAR";
    case SDLK_KP_MEMADD:
        return "KP_MEMADD";
    case SDLK_KP_MEMSUBTRACT:
        return "KP_MEMSUBTRACT";
    case SDLK_KP_MEMMULTIPLY:
        return "KP_MEMMULTIPLY";
    case SDLK_KP_MEMDIVIDE:
        return "KP_MEMDIVIDE";
    case SDLK_KP_PLUSMINUS:
        return "KP_PLUSMINUS";
    case SDLK_KP_CLEAR:
        return "KP_CLEAR";
    case SDLK_KP_CLEARENTRY:
        return "KP_CLEARENTRY";
    case SDLK_KP_BINARY:
        return "KP_BINARY";
    case SDLK_KP_OCTAL:
        return "KP_OCTAL";
    case SDLK_KP_DECIMAL:
        return "KP_DECIMAL";
    case SDLK_KP_HEXADECIMAL:
        return "KP_HEXADECIMAL";
    case SDLK_LCTRL:
        return "LCTRL";
    case SDLK_LSHIFT:
        return "LSHIFT";
    case SDLK_LALT:
        return "LALT";
    case SDLK_LGUI:
        return "LGUI";
    case SDLK_RCTRL:
        return "RCTRL";
    case SDLK_RSHIFT:
        return "RSHIFT";
    case SDLK_RALT:
        return "RALT";
    case SDLK_RGUI:
        return "RGUI";
    case SDLK_MODE:
        return "MODE";
    case SDLK_SLEEP:
        return "SLEEP";
    case SDLK_WAKE:
        return "WAKE";
    case SDLK_CHANNEL_INCREMENT:
        return "CHANNEL_INCREMENT";
    case SDLK_CHANNEL_DECREMENT:
        return "CHANNEL_DECREMENT";
    case SDLK_MEDIA_PLAY:
        return "MEDIA_PLAY";
    case SDLK_MEDIA_PAUSE:
        return "MEDIA_PAUSE";
    case SDLK_MEDIA_RECORD:
        return "MEDIA_RECORD";
    case SDLK_MEDIA_FAST_FORWARD:
        return "MEDIA_FAST_FORWARD";
    case SDLK_MEDIA_REWIND:
        return "MEDIA_REWIND";
    case SDLK_MEDIA_NEXT_TRACK:
        return "MEDIA_NEXT_TRACK";
    case SDLK_MEDIA_PREVIOUS_TRACK:
        return "MEDIA_PREVIOUS_TRACK";
    case SDLK_MEDIA_STOP:
        return "MEDIA_STOP";
    case SDLK_MEDIA_EJECT:
        return "MEDIA_EJECT";
    case SDLK_MEDIA_PLAY_PAUSE:
        return "MEDIA_PLAY_PAUSE";
    case SDLK_MEDIA_SELECT:
        return "MEDIA_SELECT";
    case SDLK_AC_NEW:
        return "AC_NEW";
    case SDLK_AC_OPEN:
        return "AC_OPEN";
    case SDLK_AC_CLOSE:
        return "AC_CLOSE";
    case SDLK_AC_EXIT:
        return "AC_EXIT";
    case SDLK_AC_SAVE:
        return "AC_SAVE";
    case SDLK_AC_PRINT:
        return "AC_PRINT";
    case SDLK_AC_PROPERTIES:
        return "AC_PROPERTIES";
    case SDLK_AC_SEARCH:
        return "AC_SEARCH";
    case SDLK_AC_HOME:
        return "AC_HOME";
    case SDLK_AC_BACK:
        return "AC_BACK";
    case SDLK_AC_FORWARD:
        return "AC_FORWARD";
    case SDLK_AC_STOP:
        return "AC_STOP";
    case SDLK_AC_REFRESH:
        return "AC_REFRESH";
    case SDLK_AC_BOOKMARKS:
        return "AC_BOOKMARKS";
    case SDLK_SOFTLEFT:
        return "SOFTLEFT";
    case SDLK_SOFTRIGHT:
        return "SOFTRIGHT";
    case SDLK_CALL:
        return "CALL";
    case SDLK_ENDCALL:
        return "ENDCALL";
    case SDLK_LEFT_TAB:
        return "LEFT_TAB";
    case SDLK_LEVEL5_SHIFT:
        return "LEVEL5_SHIFT";
    case SDLK_MULTI_KEY_COMPOSE:
        return "MULTI_KEY_COMPOSE";
    case SDLK_LMETA:
        return "LMETA";
    case SDLK_RMETA:
        return "RMETA";
    case SDLK_LHYPER:
        return "LHYPER";
    case SDLK_RHYPER:
        return "RHYPER";
    default:
        return nullptr;
    }
}
} // namespace sdl3
